<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cancelButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>